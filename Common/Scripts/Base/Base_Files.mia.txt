Comment: **************************************************************************************
Comment: ************************** TigerTMS Base Specific Script  ****************************
Comment: **************************************************************************************
 
if Variable DEBUGMODE Equals TRUE
  MessageBox: $TITLE$ Debug, Running Base_Files
end
 
Set Variable PROGRESSTEXT to iCharge: Deploying files...
 
Comment: Clean up any potential existing files
Delete Files $TARGETDIR$\iLinkManager\*.dll (when installing and uninstalling)
Delete Files $TARGETDIR$\iLinkManager\*.exe (when installing and uninstalling)
Delete Files $TARGETDIR$\iLinkManager\*.bat (when installing and uninstalling)
Delete Files $TARGETDIR$\Network\Bin\*.exe (when installing)
 
Comment: Install the Base Files
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\tig2020\*.* to $TARGETDIR$, ignore files matching wildcard pattern(s) tiglicensegen.exe;messageemulator.exe;*.pdb;ezreports.ini;tigersystem.ini;TigerAsteriskCollection.ini;CiscoCMClient.ini;, include subfolders
if Variable ALREADYINSTALLED Equals FALSE
  Comment: If it's not installed, deploy the config files and default IF_START.BAT
  Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Config\*.* to $TARGETDIR$\Config, ignore files matching wildcard pattern(s) *.pdb;
  Write into Text File $TARGETDIR$\IF_START.BAT from Value @ECHO OFF$NEWLINE$SLEEP 30$NEWLINE$ECHO Starting T2SSM...$NEWLINE$START $TARGETDIR$\T2SSM.exe$NEWLINE$ECHO Starting Crond32 Server...$NEWLINE$START $TARGETDIR$\Crond32_srvr.exe$NEWLINE$SLEEP 5$NEWLINE$$NEWLINE$ (at end of file)
end
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Carriers\*.* to $TARGETDIR$\Carriers, ignore files matching wildcard pattern(s) *.pdb;ezreports.ini;tigersystem.ini;TigerAsteriskCollection.ini;ifaceconfig.ini;CiscoCMClient.ini;, include subfolders
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\ExternalMessageBroker\*.* to $TARGETDIR$\ExternalMessageBroker, ignore files matching wildcard pattern(s) *.pdb;ezreports.ini;tigersystem.ini;TigerAsteriskCollection.ini;ifaceconfig.ini;CiscoCMClient.ini;, include subfolders
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\HTTPService\*.* to $TARGETDIR$\HTTPService, ignore files matching wildcard pattern(s) *.pdb;ezreports.ini;tigersystem.ini;TigerAsteriskCollection.ini;ifaceconfig.ini;CiscoCMClient.ini;, include subfolders
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\FilePrinter\*.* to $TARGETDIR$\FilePrinter, ignore files matching wildcard pattern(s) *.pdb;ezreports.ini;tigersystem.ini;TigerAsteriskCollection.ini;ifaceconfig.ini;CiscoCMClient.ini;
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Graphics\*.* to $TARGETDIR$\Graphics, ignore files matching wildcard pattern(s) *.pdb;ezreports.ini;tigersystem.ini;TigerAsteriskCollection.ini;ifaceconfig.ini;CiscoCMClient.ini;, include subfolders
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\iLinkManager\*.* to $TARGETDIR$\iLinkManager, ignore files matching wildcard pattern(s) *.pdb;ezreports.ini;tigersystem.ini;TigerAsteriskCollection.ini;ifaceconfig.ini;CiscoCMClient.ini;IFConfig.xml, include subfolders
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Manuals\*.* to $TARGETDIR$\Manuals, ignore files matching wildcard pattern(s) *.pdb;ezreports.ini;tigersystem.ini;TigerAsteriskCollection.ini;ifaceconfig.ini;CiscoCMClient.ini;, include subfolders
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Utility\*.* to $TARGETDIR$\Utility, ignore files matching wildcard pattern(s) *.pdb;ezreports.ini;tigersystem.ini;TigerAsteriskCollection.ini;ifaceconfig.ini;CiscoCMClient.ini;, include subfolders
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Standalone\* to $TARGETDIR$, ignore files matching wildcard pattern(s) *.pdb;ezreports.ini;tigersystem.ini;TigerAsteriskCollection.ini;ifaceconfig.ini;CiscoCMClient.ini;
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Network\Bin\RunBat.exe to $TARGETDIR$\Network\Bin
if Variable TIGERILINK not Equals TRUE
  Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Network\*.* to $TARGETDIR$\Network, ignore files matching wildcard pattern(s) *.pdb;dcmon.ini;ezreports.ini;tigersystem.ini;TigerAsteriskCollection.ini;ifaceconfig.ini;CiscoCMClient.ini;, include subfolders
  Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\UnoClient\*.* to $TARGETDIR$\UnoClient, ignore files matching wildcard pattern(s) *.pdb;ezreports.ini;tigersystem.ini;TigerAsteriskCollection.ini;ifaceconfig.ini;CiscoCMClient.ini;, include subfolders
end
Comment: Disable older overwrite for scripts and deploy then set back
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Scripts\*.his to $TARGETDIR$\Scripts, include subfolders
Set Variable NATIVE_OVERWRITE_OLDER to FALSE
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Scripts\*.ini to $TARGETDIR$\Scripts, include subfolders
Set Variable NATIVE_OVERWRITE_OLDER to TRUE
 
Comment: Install mysql.exe and mysqldump.exe for TigBackup if MariaDB is not selected
Get Component Base\iCharge/iLink\MariaDB Selection State into Variable REGCHECK
if Variable REGCHECK Equals FALSE
  Create Folder $TARGETDIR$\MariaDB
  Create Folder $TARGETDIR$\MariaDB\bin
  Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\MariaDB\MariaDB\bin\mysql.exe to $TARGETDIR$\MariaDB\bin, ignore files matching wildcard pattern(s) *.pdb;
  Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\MariaDB\MariaDB\bin\mysqldump.exe to $TARGETDIR$\MariaDB\bin, ignore files matching wildcard pattern(s) *.pdb;
end
 
Comment: Install the Temp files
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Temp\*.* to $TARGETDIR$\Temp, ignore files matching wildcard pattern(s) *.pdb;
 
Comment: Install the License Manager
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\TigerLicenseClient\CloudLicenseClient.exe to $TARGETDIR$\Temp, ignore files matching wildcard pattern(s) *.pdb;
 
Comment: Install Sleep
Copy Local Files $WINSYSDIR$\timeout.exe to $TARGETDIR$\Sleep.exe
 
Comment: Delete old Shortcuts if it is already installed
if Variable ALREADYINSTALLED Equals TRUE
  Delete Files $STARTUPALL$\DC_START (when installing)
  Delete Files $STARTUPALL$\Start Data Collection (when installing)
  Delete Files $STARTUPALL$\IF_START (when installing)
  Delete Files $STARTUPALL$\Start Interfaces (when installing)
  Delete Files $STARTUPALL$\DC_START.lnk (when installing)
  Delete Files $STARTUPALL$\Start Data Collection.lnk (when installing)
  Delete Files $STARTUPALL$\IF_START.lnk (when installing)
  Delete Files $STARTUPALL$\Start Interfaces.lnk (when installing)
  Delete Files $SHORTCUTFILESALL$\Tiger Hotel 2020\* (when installing)
  Delete Files $DESKTOPDIR$\Tiger Hotel 2020 (when installing)
  Delete Files $DESKTOPDIR$\Tiger Hotel 2020.lnk (when installing)
  Delete Files $DESKTOPDIR$\TigerTMS iCharge (when installing)
  Delete Files $DESKTOPDIR$\TigerTMS iCharge.lnk (when installing)
  Call DLL Function kernel32.dll->RemoveDirectoryA (get result into variable PLUGINRESULT)
end
 
Comment: Create the Shortcuts
Create Shortcut $TARGETDIR$\tig2020 to $TARGETDIR$\
Create Shortcut $SHORTCUTFOLDER$\Directory Definition to $TARGETDIR$\dirdefn.exe, Pin to Start Screen
Create Shortcut $SHORTCUTFOLDER$\Interface Configuration to $TARGETDIR$\ifaceconfig.exe, Pin to Start Screen
Create Shortcut $SHORTCUTFOLDER$\System Users to $TARGETDIR$\sysusers.exe, Pin to Start Screen
Create Shortcut $SHORTCUTFOLDER$\Reference Tables Misc to $TARGETDIR$\refmsc32.exe, Pin to Start Screen
Create Shortcut $SHORTCUTFOLDER$\TigerTMS Setup to $TARGETDIR$\tigsetup.exe, Pin to Start Screen
Create Shortcut $SHORTCUTFOLDER$\Posting Configuration to $TARGETDIR$\systemconfig.exe, Pin to Start Screen
if Variable TIGERILINK not Equals TRUE
  Create Shortcut $SHORTCUTFOLDER$\Advanced Reporting to $TARGETDIR$\tigersys.exe, Pin to Start Screen
  Create Shortcut $SHORTCUTFOLDER$\Carrier and Tariff Configuration to $TARGETDIR$\reftbl32.exe, Pin to Start Screen
  Create Shortcut $SHORTCUTFOLDER$\iCharge Uno to $TARGETDIR$\UnoClient\iChargeUno.exe, run as administrator, Pin to Start Screen
  Create Shortcut $DESKTOPDIR$\iCharge Uno to $TARGETDIR$\UnoClient\iChargeUno.exe, run as administrator, Pin to Start Screen
end
 
Comment: Create the scheduled tasks to start interfaces
Set Variable TASKBATTEXT to $TASKBATTEXT$REM ** Delete existing tasks$NEWLINE$SCHTASKS.exe /DELETE /TN "CG Start Data Collection" /F$NEWLINE$SCHTASKS.exe /DELETE /TN "CG Start Interfaces" /F$NEWLINE$SCHTASKS.exe /DELETE /TN "CG Start Interface Manager" /F$NEWLINE$SCHTASKS.exe /DELETE /TN "TT Start Data Collection" /F$NEWLINE$SCHTASKS.exe /DELETE /TN "TT Start Interfaces" /F$NEWLINE$SCHTASKS.exe /DELETE /TN "TT Start Interface Manager" /F$NEWLINE$SCHTASKS.exe /DELETE /TN "TT Start Interface Manager SNMP" /F$NEWLINE$$NEWLINE$
if Variable TIGERILINK Equals TRUE
  Run Program SCHTASKS.exe /DELETE /TN "CG Start Interfaces" /F (WAIT)
  Run Program SCHTASKS.exe /CREATE /TN "TT Start Interfaces" /TR "$TARGETDIR$\IF_Start.bat" /SC onlogon /RL HIGHEST /DELAY 0000:10 /F (WAIT)
  Set Variable TASKBATTEXT to $TASKBATTEXT$REM ** Create tasks$NEWLINE$SCHTASKS.exe /CREATE /TN "TT Start Interfaces" /TR "$TARGETDIR$\IF_Start.bat" /SC onlogon /RL HIGHEST /DELAY 0000:10 /F$NEWLINE$$NEWLINE$
else
  Run Program SCHTASKS.exe /DELETE /TN "CG Start Data Collection" /F (WAIT)
  Run Program SCHTASKS.exe /DELETE /TN "CG Start Interfaces" /F (WAIT)
  Run Program SCHTASKS.exe /CREATE /TN "TT Start Data Collection" /TR "$TARGETDIR$\Network\Batch\DC_Start.bat" /SC onlogon /RL HIGHEST /DELAY 0000:10 /F (WAIT)
  Run Program SCHTASKS.exe /CREATE /TN "TT Start Interfaces" /TR "$TARGETDIR$\IF_Start.bat" /SC onlogon /RL HIGHEST /DELAY 0000:10 /F (WAIT)
  Set Variable TASKBATTEXT to $TASKBATTEXT$REM ** Create tasks$NEWLINE$SCHTASKS.exe /CREATE /TN "TT Start Interfaces" /TR "$TARGETDIR$\IF_Start.bat" /SC onlogon /RL HIGHEST /DELAY 0000:10 /F$NEWLINE$SCHTASKS.exe /CREATE /TN "TT Start Data Collection" /TR "$TARGETDIR$\Network\Batch\DC_Start.bat" /SC onlogon /RL HIGHEST /DELAY 0000:10 /F$NEWLINE$$NEWLINE$
end
 
Comment: Create iLinkManager Batch Files, schedule as disabled and add to TASKBATTEXT
Delete Files $TARGETDIR$\Network\Batch\ILM_START.BAT (when installing and uninstalling)
Write into Text File $TARGETDIR$\Network\Batch\ILM_START.bat from Value @ECHO OFF$NEWLINE$$TARGETDRIVENOSLASH$$NEWLINE$CD \tig2020\iLinkManager$NEWLINE$START iLinkManager.exe$NEWLINE$ (at end of file)
Run Program SCHTASKS.exe /DELETE /TN "CG Start Interface Manager" /F
Run Program SCHTASKS.exe /CREATE /TN "TT Start iLinkManager" /TR "$TARGETDIR$\Network\Batch\ILM_START.bat" /SC onlogon /RL HIGHEST /DELAY 0000:10 /F
Set Variable TASKBATTEXT to $TASKBATTEXT$REM ** Create IFM tasks$NEWLINE$SCHTASKS.exe /CREATE /TN "TT Start iLinkManager" /TR "$TARGETDIR$\Network\Batch\ILM_START.bat" /SC onlogon /RL HIGHEST /DELAY 0000:10 /F$NEWLINE$$NEWLINE$
 
Comment: Delete the old bodge if it exists
Delete Files $TARGETDIR$\Network\Batch\Maintenance.bat (when installing and uninstalling)
Delete Files $TARGETDIR$\Utility\maintenance.exe (when installing and uninstalling)
Delete Files $TARGETDIR$\Utility\SilentCMD.exe (when installing and uninstalling)
Run Program SCHTASKS.exe /DELETE /TN "TT Maintenance" /F
 
if Variable SKIPALL not Equals TRUE
  if Variable OSTYPE not Equals EMBEDDED
    Comment: Install x86 Visual C++ Runtimes and then delete
    Set Variable PROGRESSTEXT to iCharge: Installing x86 Visual Studio C++ 2005-2017, this may take a minute...
     
    Run Program $TARGETDIR$\Temp\vcredist_x86_2008.exe /q (WAIT)
    Set Variable PROGRESS to 20
     
    Run Program $TARGETDIR$\Temp\vcredist_x86_2010.exe /q /norestart (WAIT)
    Set Variable PROGRESS to 40
     
    Run Program $TARGETDIR$\Temp\vcredist_x86_2012.exe /quiet /norestart (WAIT)
    Set Variable PROGRESS to 60
     
    Run Program $TARGETDIR$\Temp\vcredist_x86_2013.exe /quiet /norestart (WAIT)
    Set Variable PROGRESS to 80
     
    Run Program $TARGETDIR$\Temp\vcredist_x86_2017.exe /quiet /norestart (WAIT)
    Set Variable PROGRESS to 100
    if Variable OS64 Equals TRUE
      Comment: Install x64 Visual C++ Runtimes and then delete
      Set Variable PROGRESSTEXT to iCharge: Installing x64 Visual Studio C++ 2008-2017, this may take a minute...
       
      Run Program $TARGETDIR$\Temp\vcredist_x64_2008.exe /q (WAIT)
      Set Variable PROGRESS to 20
       
      Run Program $TARGETDIR$\Temp\vcredist_x64_2010.exe /q /norestart (WAIT)
      Set Variable PROGRESS to 40
       
      Run Program $TARGETDIR$\Temp\vcredist_x64_2012.exe /quiet /norestart (WAIT)
      Set Variable PROGRESS to 60
       
      Run Program $TARGETDIR$\Temp\vcredist_x64_2013.exe /quiet /norestart (WAIT)
      Set Variable PROGRESS to 80
       
      Run Program $TARGETDIR$\Temp\vcredist_x64_2017.exe /quiet /norestart (WAIT)
      Set Variable PROGRESS to 100
    end
  end
   
  Comment: Install required runtimes
  Run Program $TARGETDIR$\Temp\dotnet-hosting-3.1.21-win.exe /install /quiet /norestart (WAIT)
  Run Program $TARGETDIR$\Temp\windowsdesktop-runtime-5.0.13-win-x64.exe /install /quiet /norestart (WAIT)
   
  Comment: Delete Temp files
  Run Program CMD.exe /C DEL /Q $TARGETDIR$\Temp\vcredist* (WAIT)
  Run Program CMD.exe /C DEL /Q $TARGETDIR$\Temp\dotnet* (WAIT)
  Run Program CMD.exe /C DEL /Q $TARGETDIR$\Temp\windowsdesktop* (WAIT)
end
 
