Comment: **************************************************************************************
Comment: ************************** TigerTMS Base Specific Script  ****************************
Comment: **************************************************************************************
 
if Variable DEBUGMODE Equals TRUE
  MessageBox: $TITLE$ Debug, Running Base_Files
end
 
Comment: Clean up any potential existing files
Delete Files $TARGETDIR$\InterfaceManager\*.dll (when installing and uninstalling)
Delete Files $TARGETDIR$\InterfaceManager\*.exe (when installing and uninstalling)
 
Comment: Install the Base Files
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\tig2020\*.* to $TARGETDIR$, ignore files matching wildcard pattern(s) tiglicensegen.exe;messageemulator.exe;*.pdb;, include subfolders
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Config\*.* to $TARGETDIR$\Config, ignore files matching wildcard pattern(s) *.pdb;
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Carriers\*.* to $TARGETDIR$\Carriers, ignore files matching wildcard pattern(s) *.pdb;, include subfolders
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\ExternalMessageBroker\*.* to $TARGETDIR$\ExternalMessageBroker, ignore files matching wildcard pattern(s) *.pdb;, include subfolders
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\FilePrinter\*.* to $TARGETDIR$\FilePrinter, ignore files matching wildcard pattern(s) *.pdb;
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Graphics\*.* to $TARGETDIR$\Graphics, ignore files matching wildcard pattern(s) *.pdb;, include subfolders
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\InterfaceManager\*.* to $TARGETDIR$\InterfaceManager, ignore files matching wildcard pattern(s) *.pdb;, include subfolders
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Manuals\*.* to $TARGETDIR$\Manuals, ignore files matching wildcard pattern(s) *.pdb;, include subfolders
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Utility\*.* to $TARGETDIR$\Utility, ignore files matching wildcard pattern(s) *.pdb;, include subfolders
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Standalone\* to $TARGETDIR$, ignore files matching wildcard pattern(s) *.pdb;
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Network\Bin\RunBat.exe to $TARGETDIR$\Network\Bin
if Variable TIGERILINK not Equals TRUE
  Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Network\Collection\* to $TARGETDIR$\Network\Collection, ignore files matching wildcard pattern(s) *.pdb;
  Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Network\NetworkConf\* to $TARGETDIR$\Network\NetworkConf, ignore files matching wildcard pattern(s) *.pdb;
  Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Network\Switch\* to $TARGETDIR$\Network\Switch, ignore files matching wildcard pattern(s) *.pdb;, include subfolders
end
 
Comment: Set the file deployment rules for Connected Guests
if Variable PRODUCTBRAND Equals CG
  Comment: Check the Scripts to be deployed
  if Variable TIGERCA Equals TRUE
    Comment: CA Only - Install only PMS scripts and custom iftypes.ini
    Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\TigerCA\LiveBuild\tig2020\Scripts\iftypes.ini to $TARGETDIR$\Scripts
    Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Scripts\PMS\*.* to $TARGETDIR$\Scripts\PMS, ignore files matching wildcard pattern(s) *.pdb;, include subfolders
  else
    if Variable TIGERSMB not Equals TRUE
      Comment: Install all scripts unless it's SMB which doesn't need any
      Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Scripts\*.* to $TARGETDIR$\Scripts, ignore files matching wildcard pattern(s) *.pdb;, include subfolders
    end
  end
  Comment: Check the Network files to be deployed - None for iLink
  if Variable TIGERILINK not Equals TRUE
    Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Network\*.* to $TARGETDIR$\Network, ignore files matching wildcard pattern(s) *.pdb;, include subfolders
  end
end
 
Comment: Set the file deployment rules for Mitel
if Variable PRODUCTBRAND Equals MITEL
  Comment: Check the Scripts to be deployed
  if Variable TIGERCA Equals TRUE
    Comment: CA Only - Install only PMS scripts and custom iftypes.ini
    Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\TigerCA\LiveBuild\tig2020\Scripts\iftypes.ini to $TARGETDIR$\Scripts
    Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Scripts\PMS\*.* to $TARGETDIR$\Scripts\PMS, ignore files matching wildcard pattern(s) *.pdb;, include subfolders
  else
    if Variable TIGERSMB not Equals TRUE
      Comment: Install all Mitel related scripts unless it's SMB which doesn't need any
      Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Scripts\*.* to $TARGETDIR$\Scripts, ignore files matching wildcard pattern(s) *\\SwitchPMS\\*;*pbx_*;, include subfolders
      Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Scripts\SwitchPMS\pbx_MiV* to $TARGETDIR$\Scripts\SwitchPMS, ignore files matching wildcard pattern(s) *.pdb;, include subfolders
      Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Scripts\SwitchPMS\pbx_Mitel* to $TARGETDIR$\Scripts\SwitchPMS, ignore files matching wildcard pattern(s) *.pdb;, include subfolders
    end
  end
  Comment: Check the Network files to be deployed - None for iLink
  if Variable TIGERILINK not Equals TRUE
    Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Network\Bin\Collection.exe to $TARGETDIR$\Network\Bin
    Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Network\Bin\MiV* to $TARGETDIR$\Network\Bin, ignore files matching wildcard pattern(s) *.pdb;, include subfolders
    Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Network\Bin\IFM.exe to $TARGETDIR$\Network\Bin, ignore files matching wildcard pattern(s) *.pdb;
    Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Network\Bin\dcmon.exe to $TARGETDIR$\Network\Bin
    Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Network\Bin\regex2.dll to $TARGETDIR$\Network\Bin
    Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Network\SwitchConf\MiV* to $TARGETDIR$\Network\SwitchConf, ignore files matching wildcard pattern(s) *.pdb;, include subfolders
    Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Network\SwitchConf\IFM.conf to $TARGETDIR$\Network\SwitchConf
  end
end
 
Comment: Install mysql.exe and mysqldump.exe for TigBackup if MariaDB is not selected
Get Component Base\iCharge/iLink\MariaDB Selection State into Variable REGCHECK
if Variable REGCHECK Equals FALSE
  Create Folder $TARGETDIR$\MariaDB
  Create Folder $TARGETDIR$\MariaDB\bin
  Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\MariaDB\MariaDB\bin\mysql.exe to $TARGETDIR$\MariaDB\bin, ignore files matching wildcard pattern(s) *.pdb;
  Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\MariaDB\MariaDB\bin\mysqldump.exe to $TARGETDIR$\MariaDB\bin, ignore files matching wildcard pattern(s) *.pdb;
end
 
Comment: Install the Temp files
if Variable OSTYPE not Equals EMBEDDED
  Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Temp\vcredist_x86* to $TARGETDIR$\Temp, ignore files matching wildcard pattern(s) *.pdb;
end
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Temp\Silverlight.exe to $TARGETDIR$\Temp, ignore files matching wildcard pattern(s) *.pdb;
Install Files \\ttstorage\Central\Master\Test\TigerTMS_Installer\Common\LiveBuild\Base\Temp\fnr.exe to $TARGETDIR$\Temp, ignore files matching wildcard pattern(s) *.pdb;
 
Comment: Install Sleep
if Variable OS64 Equals TRUE
  Copy Local Files $WINSYSDIR64$\timeout.exe to $TARGETDIR$\Sleep.exe
else
  Copy Local Files $WINSYSDIR$\timeout.exe to $TARGETDIR$\Sleep.exe
end
 
Comment: Delete old Shortcuts if it is already installed
if Variable ALREADYINSTALLED Equals TRUE
  Delete Files $STARTUPALL$\DC_START (when installing)
  Delete Files $STARTUPALL$\Start Data Collection (when installing)
  Delete Files $STARTUPALL$\IF_START (when installing)
  Delete Files $STARTUPALL$\Start Interfaces (when installing)
  Delete Files $STARTUPALL$\DC_START.lnk (when installing)
  Delete Files $STARTUPALL$\Start Data Collection.lnk (when installing)
  Delete Files $STARTUPALL$\IF_START.lnk (when installing)
  Delete Files $STARTUPALL$\Start Interfaces.lnk (when installing)
  Delete Files $SHORTCUTFILESALL$\Tiger Hotel 2020\* (when installing)
  Delete Files $DESKTOPDIR$\Tiger Hotel 2020 (when installing)
  Delete Files $DESKTOPDIR$\Tiger Hotel 2020.lnk (when installing)
  Call DLL Function kernel32.dll->RemoveDirectoryA (get result into variable PLUGINRESULT)
end
 
Comment: Create the Shortcuts
Create Shortcut $TARGETDIR$\tig2020 to $TARGETDIR$\
Create Shortcut $SHORTCUTFOLDER$\Directory Definition to $TARGETDIR$\dirdefn.exe, Pin to Start Screen
Create Shortcut $SHORTCUTFOLDER$\Interface Configuration to $TARGETDIR$\ifaceconfig.exe, Pin to Start Screen
Create Shortcut $SHORTCUTFOLDER$\System Users to $TARGETDIR$\sysusers.exe, Pin to Start Screen
Create Shortcut $SHORTCUTFOLDER$\Reference Tables Misc to $TARGETDIR$\refmsc32.exe, Pin to Start Screen
Create Shortcut $SHORTCUTFOLDER$\TigerTMS Setup to $TARGETDIR$\tigsetup.exe, Pin to Start Screen
Create Shortcut $SHORTCUTFOLDER$\Posting Configuration to $TARGETDIR$\systemconfig.exe, Pin to Start Screen
if Variable TIGERILINK not Equals TRUE
  Create Shortcut $SHORTCUTFOLDER$\Advanced Reporting to $TARGETDIR$\tigersys.exe, Pin to Start Screen
  Create Shortcut $SHORTCUTFOLDER$\Carrier and Tariff Configuration to $TARGETDIR$\reftbl32.exe, Pin to Start Screen
end
 
Comment: Create the scheduled tasks to start interfaces
if Variable TIGERILINK Equals TRUE
  Run Program SCHTASKS.exe /CREATE /TN "CG Start Interfaces" /TR "$TARGETDIR$\IF_Start.bat" /SC onlogon /RL HIGHEST /DELAY 0000:10 /F (WAIT)
  Set Variable TASKBATTEXT to $TASKBATTEXT$SCHTASKS.exe /DELETE /TN "CG Start Interfaces"$NEWLINE$SCHTASKS.exe /CREATE /TN "CG Start Interfaces" /TR "$TARGETDIR$\IF_Start.bat" /SC onlogon /RL HIGHEST /DELAY 0000:10 /F$NEWLINE$
else
  Run Program SCHTASKS.exe /CREATE /TN "CG Start Data Collection" /TR "$TARGETDIR$\Network\Batch\DC_Start.bat" /SC onlogon /RL HIGHEST /DELAY 0000:10 /F (WAIT)
  Run Program SCHTASKS.exe /CREATE /TN "CG Start Interfaces" /TR "$TARGETDIR$\IF_Start.bat" /SC onlogon /RL HIGHEST /DELAY 0000:10 /F (WAIT)
  Set Variable TASKBATTEXT to $TASKBATTEXT$SCHTASKS.exe /DELETE /TN "CG Start Data Collection"$NEWLINE$SCHTASKS.exe /DELETE /TN "CG Start Interfaces"$NEWLINE$SCHTASKS.exe /CREATE /TN "CG Start Data Collection" /TR "$TARGETDIR$\Network\Batch\DC_Start.bat" /SC onlogon /RL HIGHEST /DELAY 0000:10 /F$NEWLINE$SCHTASKS.exe /CREATE /TN "CG Start Interfaces" /TR "$TARGETDIR$\IF_Start.bat" /SC onlogon /RL HIGHEST /DELAY 0000:10 /F$NEWLINE$
end
 
Comment: Create batch files to recreate the scheduled tasks under the current user
Call DLL Function kernel32.dll->DeleteFileA (get result into variable PLUGINRESULT)
Write into Text File $TARGETDIR$\Network\Batch\CreateStartupTasks.bat from Value $TASKBATTEXT$ (at end of file)
Write into Text File $TARGETDIR$\Network\Batch\CreateIFMStartupTask.bat from Value SCHTASKS.exe /DELETE /TN "CG Start Interface Manager"$NEWLINE$/CREATE /TN "CG Start Interface Manager" /TR "$TARGETDIR$\InterfaceManager\TMSInterfaceManager.exe" /SC onlogon /RL HIGHEST /DELAY 0000:10 /F /V1 (at end of file)
 
Comment: Create the RunOnce Batch File which will run upgrade
Call DLL Function kernel32.dll->DeleteFileA (get result into variable PLUGINRESULT)
Write into Text File $TARGETDIR$\Temp\RunOnce.bat from Value @ECHO OFF$NEWLINE$$NEWLINE$ECHO *****************************************************$NEWLINE$ECHO.$NEWLINE$ECHO    Processing final Connected Guests setup routine$NEWLINE$ECHO.$NEWLINE$ECHO.$NEWLINE$ECHO.$NEWLINE$ECHO                PLEASE DO NOT INTERRUPT$NEWLINE$ECHO.$NEWLINE$ECHO *****************************************************$NEWLINE$$NEWLINE$ECHO Waiting for MySQL...$NEWLINE$:WAITFORMYSQL$NEWLINE$$NEWLINE$	SC query MySQL | find "STATE" | find "RUNNING"$NEWLINE$	IF /I "%errorlevel%"=="0" GOTO :START$NEWLINE$	GOTO WAITFORMYSQL$NEWLINE$$NEWLINE$:START$NEWLINE$$NEWLINE$ECHO Running Upgrade...$NEWLINE$$TARGETDIR$\Upgrade.exe /A$NEWLINE$$NEWLINE$ECHO Running Tasks...$NEWLINE$SCHTASKS /RUN /TN "CG Start Data Collection"$NEWLINE$SCHTASKS /RUN /TN "CG Start Interfaces"$NEWLINE$$NEWLINE$ECHO Tidying up files...$NEWLINE$DEL C:\TTInstall_MACAddress.txt$NEWLINE$DEL $TARGETDIR$\Temp\RunOnce.bat$NEWLINE$ (at start of file)
Write Registry Key HKLM\Software\Microsoft\Windows\CurrentVersion\RunOnce\CGRunOnce, $TARGETDIR$\Temp\RunOnce.bat
 
if Variable OSTYPE not Equals EMBEDDED
  Comment: Install Visual C++ Runtimes and then delete
  Set Variable PROGRESSTEXT to iCharge: Installing Visual Studio C++ 2005-2017, this may take a minute...
  Run Program $TARGETDIR$\Temp\vcredist_x86_2005.exe /Q (WAIT)
  Call DLL Function kernel32.dll->DeleteFileA (get result into variable PLUGINRESULT)
  Set Variable PROGRESS to 20
   
  Run Program $TARGETDIR$\Temp\vcredist_x86_2008.exe /q (WAIT)
  Call DLL Function kernel32.dll->DeleteFileA (get result into variable PLUGINRESULT)
  Set Variable PROGRESS to 40
   
  Run Program $TARGETDIR$\Temp\vcredist_x86_2012.exe /q (WAIT)
  Call DLL Function kernel32.dll->DeleteFileA (get result into variable PLUGINRESULT)
  Set Variable PROGRESS to 60
   
  Run Program $TARGETDIR$\Temp\vcredist_x86_2013.exe /q (WAIT)
  Call DLL Function kernel32.dll->DeleteFileA (get result into variable PLUGINRESULT)
  Set Variable PROGRESS to 80
   
  Run Program $TARGETDIR$\Temp\vcredist_x86_2017.exe /q (WAIT)
  Call DLL Function kernel32.dll->DeleteFileA (get result into variable PLUGINRESULT)
  Set Variable PROGRESS to 100
end
 
